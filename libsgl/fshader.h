#ifndef _fshaderFshader_h_
#define _fshaderFshader_h_


// Header generated from binary by WriteAsBinHeader()..
static const int fshaderFshaderLength = 54;
static const unsigned int fshaderFshader[fshaderFshaderLength]={
	0x20205350,	0xFFFF0008,	0x00000048,	0x01020000,	0x00000009,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00010000,
	0x00F820E4,	0x00000000,	0x00000000,	0x05000000,	0x188002E4,	0x00000000,	0x00000000,	0x0003E407,	0x107821E4,	0x00000000,
	0x01000000,	0x0100E401,	0x037820E4,	0x00000000,	0x00000000,	0x05010000,	0x188002E4,	0x00000000,	0x01000000,	0x0004E407,
	0x107821E4,	0x00000000,	0x01000000,	0x0100E401,	0x037820E4,	0x00000000,	0x00000000,	0x01000000,	0x00F810E4,	0x00000000,
	0x00000000,	0x00000000,	0x1E000000,	0x00000000,};

//checksum generated by simpleCheckSum()
static const unsigned int fshaderFshaderCheckSum = 96;

static const char* fshaderFshaderText = 
	"# Fragment shader code for fixed pipeline emulation\n"
	"# S3C6410 FIMG-3DSE v.1.5\n"
	"#\n"
	"# Copyright 2010 Tomasz Figa <tomasz.figa@gmail.com>\n"
	"#\n"
	"# This program is free software: you can redistribute it and/or modify\n"
	"# it under the terms of the GNU Lesser General Public License as published by\n"
	"# the Free Software Foundation, either version 3 of the License, or\n"
	"# (at your option) any later version.\n"
	"#\n"
	"# This program is distributed in the hope that it will be useful,\n"
	"# but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
	"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n"
	"# GNU Lesser General Public License for more details.\n"
	"#\n"
	"# You should have received a copy of the GNU Lesser General Public License\n"
	"# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n"
	"#\n"
	"\n"
	"# Fragment shader version\n"
	"ps_3_0\n"
	"\n"
	"# FIMG version >= 1.2\n"
	"fimg_version    0x01020000\n"
	"\n"
	"# Shader code\n"
	"label start\n"
	"    # Get fragment color\n"
	"    mov r0, v1\n"
	"\n"
	"    # Skip if texture0 is disabled\n"
	"    bf notexture0, b0\n"
	"\n"
	"    # Get texel value from texture0\n"
	"    texld r1, v3, s0\n"
	"    mul r0, r0, r1\n"
	"\n"
	"label notexture0\n"
	"    # Skip if texture1 is disabled\n"
	"    bf notexture1, b1\n"
	"\n"
	"    # Get texel value from texture1\n"
	"    texld r1, v4, s1\n"
	"    mul r0, r0, r1\n"
	"\n"
	"label notexture1\n"
	"    # Store the pixel\n"
	"    mov oColor, r0\n"
	"\n"
	"    # Return\n"
	"    ret\n"
	"# End of shader code\n"
	"";

#ifdef GL_HELPERS_INCLUDED
//glHelpers.h must be included BEFORE any of the shader header files. Also make sure you have the latest version of glHelpers.h
static ghShader fshaderFshaderShader(fshaderFshaderText, fshaderFshader, fshaderFshaderLength, fshaderFshaderCheckSum);


#endif


#endif //_fshaderFshader_h_

#ifndef _fshaderFshader_h_
#define _fshaderFshader_h_


// Header generated from binary by WriteAsBinHeader()..
static const int fshaderFshaderLength = 26;
static const unsigned int fshaderFshader[fshaderFshaderLength]={
	0x20205350,	0xFFFF0008,	0x00000048,	0x01020000,	0x00000002,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00FA10E4,	0x00000000,	0x00000000,	0x00000000,	0x1E000000,	0x00000000,};

//checksum generated by simpleCheckSum()
static const unsigned int fshaderFshaderCheckSum = 82;

static const char* fshaderFshaderText = 
	"# Fragment shader code for fixed pipeline emulation\n"
	"# FIMG-3DSE v.1.5\n"
	"# Copyright 2010 Tomasz Figa <tomasz.figa@gmail.com>\n"
	"\n"
	"# Fragment shader version\n"
	"ps_3_0\n"
	"\n"
	"# FIMG version >= 1.2\n"
	"fimg_version    0x01020000\n"
	"\n"
	"# Shader code\n"
	"label start\n"
	"# Use color from input 0 for generated fragment\n"
	"mov_sat oColor, v0\n"
	"# Return\n"
	"ret\n"
	"# End of shader code\n"
	"";

#ifdef GL_HELPERS_INCLUDED
//glHelpers.h must be included BEFORE any of the shader header files. Also make sure you have the latest version of glHelpers.h
static ghShader fshaderFshaderShader(fshaderFshaderText, fshaderFshader, fshaderFshaderLength, fshaderFshaderCheckSum);


#endif


#endif //_fshaderFshader_h_

#ifndef _vshaderVshader_h_
#define _vshaderVshader_h_


// Header generated from binary by WriteAsBinHeader()..
static const int vshaderVshaderLength = 154;
static const unsigned int vshaderVshader[vshaderVshaderLength]={
	0x20205356,	0xFFFF0008,	0x00000048,	0x01020000,	0x0000000E,	0x00000014,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x0204E400,
	0x048820E4,	0x00000000,	0x00000000,	0x0205E400,	0x049020E4,	0x00000000,	0x00000000,	0x0206E400,	0x04A020E4,	0x00000000,
	0x00000000,	0x0207E400,	0x04C020E4,	0x00000000,	0x00000000,	0x0200E401,	0x048800E4,	0x00000000,	0x00000000,	0x0201E401,
	0x049000E4,	0x00000000,	0x00000000,	0x0202E401,	0x04A000E4,	0x00000000,	0x00000000,	0x0203E401,	0x04C000E4,	0x00000000,
	0x00000000,	0x00010000,	0x00F801E4,	0x00000000,	0x00000000,	0x00020000,	0x00F802E4,	0x00000000,	0x00000000,	0x00030000,
	0x00F803E4,	0x00000000,	0x00000000,	0x00040000,	0x00F804E4,	0x00000000,	0x00000000,	0x00050000,	0x00F805E4,	0x00000000,
	0x00000000,	0x00000000,	0x1E000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,	0x00000000,
	0x00000000,	0x00000000,	0x00000000,	0x00000000,};

//checksum generated by simpleCheckSum()
static const unsigned int vshaderVshaderCheckSum = 94;

static const char* vshaderVshaderText = 
	"# Vertex shader code for fixed pipeline emulation\n"
	"# S3C6410 FIMG-3DSE v.1.5\n"
	"#\n"
	"# Copyright 2010 Tomasz Figa <tomasz.figa@gmail.com>\n"
	"#\n"
	"# This program is free software: you can redistribute it and/or modify\n"
	"# it under the terms of the GNU Lesser General Public License as published by\n"
	"# the Free Software Foundation, either version 3 of the License, or\n"
	"# (at your option) any later version.\n"
	"#\n"
	"# This program is distributed in the hope that it will be useful,\n"
	"# but WITHOUT ANY WARRANTY; without even the implied warranty of\n"
	"# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n"
	"# GNU Lesser General Public License for more details.\n"
	"#\n"
	"# You should have received a copy of the GNU Lesser General Public License\n"
	"# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n"
	"#\n"
	"\n"
	"# Vertex shader version\n"
	"vs_3_0\n"
	"\n"
	"# FIMG version >= 1.2\n"
	"fimg_version    0x01020000\n"
	"\n"
	"# Projection matrix\n"
	"def c0, 0.0, 0.0, 0.0, 0.0\n"
	"def c1, 0.0, 0.0, 0.0, 0.0\n"
	"def c2, 0.0, 0.0, 0.0, 0.0\n"
	"def c3, 0.0, 0.0, 0.0, 0.0\n"
	"\n"
	"# Model-view matrix\n"
	"def c4, 0.0, 0.0, 0.0, 0.0\n"
	"def c5, 0.0, 0.0, 0.0, 0.0\n"
	"def c6, 0.0, 0.0, 0.0, 0.0\n"
	"def c7, 0.0, 0.0, 0.0, 0.0\n"
	"\n"
	"# Inverted model-view matrix\n"
	"def c8, 0.0, 0.0, 0.0, 0.0\n"
	"def c9, 0.0, 0.0, 0.0, 0.0\n"
	"def c10, 0.0, 0.0, 0.0, 0.0\n"
	"def c11, 0.0, 0.0, 0.0, 0.0\n"
	"\n"
	"# Texture 0 matrix\n"
	"def c12, 0.0, 0.0, 0.0, 0.0\n"
	"def c13, 0.0, 0.0, 0.0, 0.0\n"
	"def c14, 0.0, 0.0, 0.0, 0.0\n"
	"def c15, 0.0, 0.0, 0.0, 0.0\n"
	"\n"
	"# Texture 1 matrix\n"
	"def c16, 0.0, 0.0, 0.0, 0.0\n"
	"def c17, 0.0, 0.0, 0.0, 0.0\n"
	"def c18, 0.0, 0.0, 0.0, 0.0\n"
	"def c19, 0.0, 0.0, 0.0, 0.0\n"
	"\n"
	"# Shader code\n"
	"label start\n"
	"# Transform position by model-view matrix\n"
	"dp4 r0.x, c4, v0\n"
	"dp4 r0.y, c5, v0\n"
	"dp4 r0.z, c6, v0\n"
	"dp4 r0.w, c7, v0\n"
	"# Transform position by projection matrix\n"
	"dp4 o0.x, c0, r0\n"
	"dp4 o0.y, c1, r0\n"
	"dp4 o0.z, c2, r0\n"
	"dp4 o0.w, c3, r0\n"
	"# Pass vertex normal\n"
	"mov o1, v1\n"
	"# Pass vertex color\n"
	"mov o2, v2\n"
	"# Pass vertex point size\n"
	"mov o3, v3\n"
	"# Pass vertex texcoord 0\n"
	"mov o4, v4\n"
	"# Pass vertex texcoord 1\n"
	"mov o5, v5\n"
	"# Return\n"
	"ret\n"
	"# End of shader code\n"
	"";

#ifdef GL_HELPERS_INCLUDED
//glHelpers.h must be included BEFORE any of the shader header files. Also make sure you have the latest version of glHelpers.h
static ghShader vshaderVshaderShader(vshaderVshaderText, vshaderVshader, vshaderVshaderLength, vshaderVshaderCheckSum);


#endif


#endif //_vshaderVshader_h_
